<?xml version="1.0"?>
<configuration>
  <!--  APPLICATION SPECIFIC SETTINGS
        This section contains configuration parameters specific to the host runtime system. -->
  <appSettings>
    <!-- The LINCEnvironmentProgId parameter specifies the CE Runtime system to use.
         The possible values are:
          - blank or parameter not specified (default), use CE .NET Runtime.
            When using this option, IspecModel dll files for .NET are required.
          - "LINCEnvironment.Java.1", use CE Java Runtime with the Microsoft JVM.
            When using this option, IspecModel class files for Java are required.
          - "LINCEnvironment.Bean.1", use CE Java Runtime with the SUN JVM.
            When using this option, IspecModel class files for Java are required. -->
    <add key="LINCEnvironmentProgId" value=""/>
    <add key="ApplicationName" value="sfb"/>
    <add key="BundleName" value="wssfb"/>
    <add key="DisplayName" value="Display Name"/>
    <add key="PackagePrefix" value="com.unisys"/>
    <!-- The HostURI parameter specifies the connection details according to the 
         required connection type.

         For TCP/IP connections, the format is:
            "x-ratl:[HostName or IP Address]:[Port Number]"
         For MSMQ connections, the format is:
            "x-msmq:[Format]:[HostName or IP Address of MSMQ server]:[Queue Name]

         Notes for MSMQ Connections:
            Format: Refer to the MSMQ documentation for all possible types.
               'DIRECT' queues are recommended as they avoid the overhead of a queue name
               lookup from directory services and MSMQ store and forward operations 
               as messages are sent DIRECTLY to the machine hosting the queue.
               Valid direct formats are:
                  DIRECT=OS            - uses native machine naming convention 
                  DIRECT=SPX           - connection-orientated SPX over IPX
                  DIRECT=TCP           - connection-orientated TCP over IP

            Queue Name: The queue name can be a public or private queue on the MSMQ server.
               Using private queues is recommened, as they have less
               overhead in processing, and should be faster.
               Refer to the MSMQ documentation for all possible queue names.
            Example of MSMQ HostUri value:
               value="x-msmq:DIRECT=OS:[MSMQ Server]:PRIVATE$\[request queue name]" -->
    <!-- <add key="HostURI" value="x-ratl:10.20.100.172:2449"/> -->
    <add key="HostURI" value="x-ratl:10.20.100.125:2449"/>
    <!-- Enter the Host View Name to be used by the Remote Access Server -->
    <add key="HostViewName" value="SFBPFSYS"/>
    <!-- The connection mode attribute is used to inform the host application what type
         of client is connecting to it. The values can be:
            0 - PCE (GLB.Style = NOFORM) (GLB.GUI = Y) (default)
            1 - NOF (GLB.Style = NOFORM) (GLB.GUI = N)
            2 - Component Enabler (GLB.Style = ACTIVELINC) (GLB.GUI = N) -->
    <add key="ConnectionMode" value="2"/>
    <!-- COPIAR DESDE ACA -->
    <!-- The RATLStartVersion parameter specifies the RATL Version number to the Remote Access Server (RAS).
         If the RAS can support that version, the connect will succeed. If the RAS cannot support that version,
         the connect is rejected. In such cases, the client will try to connect again, with a lower RATL version number. -->
    <!-- El parámetro RATLStartVersion le especifica el numero de version RATL al Remote Access Server (RAS)
         Si el RAS soporta dicha version, la conexión ocurre. Si el RAS no soporta dicha version, la conexión es rechazada. 
         En este caso, el cliente intentará conectarse nuevamente, con un número menos de versión RATL al Remote Access Server (RAS). -->
    <add key="RATLStartVersion" value="12"/>
    <!-- COPIAR HASTA ACA -->
    <!-- The IspecModelRootDirectory parameter specifies the root location of the IspecModel
         dll's. This is used when connecting via the CE .NET based runtime system. -->
    <!-- <add key="IspecModelRootDirectory" value="C:\inetpub\wwwroot\sfb_wssfb_WS\classes"/> -->
    <add key="IspecModelRootDirectory" value="C:\NGEN_CE\classes"/>
    <!-- Login details -->
    <!-- <add key="HostLogin" value=""/> -->
    <!-- <add key="HostPassword" value=""/> -->
    <!-- <add key="HostDomain" value="."/> -->
    <!-- Component Enabler Logging -->
    <add key="LoggingEnabled" value="true"/>
    <!-- <add key="LogFile" value="C:\inetpub\wwwroot\sfb_wssfb_WS\Log\wssfb.log"/> -->
    <add key="LogFile" value="C:\Temp\Log\wssfb.log"/>
    <add key="LogLevel" value="7"/>
    <!-- This specifies how to return transaction errors (CE error code 911) to
         the Client Application. When true (default), it is returned as a standard
         Soap Fault message. When false, it is returned as a normal response with
         the error(s) in the StatusMessages field.
         Some Client Applications, such as BizTalk, prefer application errors to be
         returned as a normal transaction response. -->
    <add key="ReturnTransactionErrorAsSoapFault" value="true"/>
    <!-- Enable Object Pooling of the LINCEnvironment.
         Object pooling requires Ispecs to be stateless.
         The object pool such as min/max pool size is further configured via
         Component Services. -->
    <add key="ObjectPoolingEnabled" value="true"/>
    <!-- ObjectPoolingAssembly specifies the fully qualified assembly name containing
         the pool of objects. This does normally not need to be specified except in special
         circumstances when the assembly name is changed.
         When not specified, the default value is:
     "CEWindowsAPIPool, Version=2.0.1000.1, Culture=neutral, PublicKeyToken=e786d48c08ed6963" -->
    <add key="ObjectPoolingAssembly" value=""/>
    <!-- ObjectPoolingType specifies the full name of the type within the assembly
         containing the pool of objects. This is specified when a pool of LINCEnvironment
         objects specific to this Web Service Application is required. The full type name
         is specified as "Namespace.ClassName". For further information on how to set up
         an application specific pool, see the CEWindowsAPIPool sub-directory located
         in C:\NGEN_CE\Sample.
         When not specified, the default value is: "CEWindowsAPIPool.LINCEnvironmentPooled" -->
    <add key="ObjectPoolingType" value=""/>
    <!-- FireUpIspecForPooling tag specifies the Fireup ispec of the application for Object Pooling.
         This must be specified. This is used by subsequent pooled sessions after the initial
         session has been established. -->
    <add key="FireUpIspecForPooling" value="DX130"/>
    <!-- Soap Request/Response tracing.
         Note: This requires the CEdotNetWsInfrastructure.SchemaValidation type to be added
         to the soapExtensionTypes tag located in the webServices configuration section. -->
    <add key="EnableSoapTrace" value="true"/>
    <!-- Trace file cannot be straight under C:. Accces is denied to write to C: -->
    <add key="TraceFile" value="C:\Temp\CEdotNetWsLog.txt"/>
    <!-- Enable validation against schema of the web service.
         SoapSchemaValidation validates incoming soap requests against the implied schema
         before calling the webmethod. This prevents a webmethod from producing a false
         positive response when an exception would have been expected.
         Note: This requires the CEdotNetWsInfrastructure.SchemaValidation type to be added
         to the soapExtensionTypes tag located in the webServices configuration section. -->
    <add key="EnableSchemaValidation" value="false"/>
  </appSettings>
  <!--
    Para obtener una descripción de los cambios de web.config, vea http://go.microsoft.com/fwlink/?LinkId=235367.

    Los siguientes atributos se pueden establecer en la etiqueta <httpRuntime>.
      <system.Web>
        <httpRuntime targetFramework="4.5.1" />
      </system.Web>
  -->
  <system.web>
    <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug="true" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP.NET files.
    -->
    <compilation defaultLanguage="c#" debug="true" targetFramework="4.5.1"/>
    <!--  CUSTOM ERROR MESSAGES
          Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
          Add <error> tags for each of the errors you want to handle.

          "On" Always display custom (friendly) messages.
          "Off" Always display detailed ASP.NET error information.
          "RemoteOnly" Display custom (friendly) messages only to users not running 
           on the local Web server. This setting is recommended for security purposes, so 
           that you do not display application detail information to remote clients.
    -->
    <customErrors mode="RemoteOnly"/>
    <!--  AUTHENTICATION 
          This section sets the authentication policies of the application. Possible modes are "Windows", 
          "Forms", "Passport" and "None"

          "None" No authentication is performed. 
          "Windows" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
           its settings for the application. Anonymous access must be disabled in IIS. 
          "Forms" You provide a custom form (Web page) for users to enter their credentials, and then 
           you authenticate them in your application. A user credential token is stored in a cookie.
          "Passport" Authentication is performed via a centralized authentication service provided
           by Microsoft that offers a single logon and core profile services for member sites.
    -->
    <authentication mode="Windows"/>
    <!--  AUTHORIZATION 
          This section sets the authorization policies of the application. You can allow or deny access
          to application resources by user or role. Wildcards: "*" mean everyone, "?" means anonymous 
          (unauthenticated) users.
    -->
    <authorization>
      <allow users="*"/>
      <!-- Allow all users -->
      <!--  <allow     users="[comma separated list of users]"
                             roles="[comma separated list of roles]"/>
                  <deny      users="[comma separated list of users]"
                             roles="[comma separated list of roles]"/>
            -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the "trace.axd" page from your web application
          root. 
    -->
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true"/>
    <!--  SESSION STATE SETTINGS
          By default ASP.NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless="true".
    -->
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;Trusted_Connection=yes" cookieless="false" timeout="20"/>
    <!--  GLOBALIZATION
          This section sets the globalization settings of the application. 
    -->
    <globalization requestEncoding="utf-8" responseEncoding="utf-8"/>
    <!-- WEB SERVICES -->
    <webServices>
      <!-- PROTOCOLS
            This section adds/removes web service protocols.
       -->
      <protocols>
        <!-- <add name="HttpPost"/> -->
        <remove name="HttpPost"/>
        <remove name="HttpGet"/>
      </protocols>
      <!-- SOAPEXTENSIONTYPES
            This section adds web service Soap Extension types.
       -->
      <soapExtensionTypes>
        <!-- The CEdotNetWsInfrastructure.SchemaValidation type provides Schema Validation
               and Soap Request/Response Trace capabilities for CE WebServices. -->
        <add type="CEdotNetWsInfrastructure.SchemaValidation, wssfb" priority="0" group="1"/>
      </soapExtensionTypes>
    </webServices>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
</configuration>